<?xml version="1.0"?>

<!--  $Header: entsec/oes/examples/xacml/java/build.xml /entsec_11.1.1.4.0_dwg/3 2011/06/10 04:16:14 sudasrid Exp $ -->

<!-- 
 Copyright (c) 2011, Oracle and/or its affiliates. All rights reserved. 

   NAME
     build.xml - <one-line expansion of the name>

   DESCRIPTION
     <short description of component this file declares/defines>

   NOTES
     <other useful comments, qualifications, etc.>

-->
<project name="wsxacml-client-sample" basedir="." default="help">
    <property name="src" location="./src"/>
    <property name="build.classes" location="./classes"/>
    <property file="./config/build.properties"/>
    
    <!-- path for axis tasks -->
    <path id="axis.classpath">
        <fileset dir="${idm.home}/modules/oracle.oes_11.1.1/thirdparty">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    
    <!-- path for build and run -->
    <path id="build.classpath">
        <pathelement location="${idm.home}/modules/oracle.oes.sm_11.1.1/axis_patch.jar"/>
        <path refid="axis.classpath"/>
    </path>

    <taskdef resource="axis-tasks.properties" classpathref="axis.classpath"/>

    <target name="gen-wsdl-stubs" depends="clean" description="Generate java files from wsdl.">
        <mkdir dir="genfiles" />
        <axis-wsdl2java url="${wssm.service.url}/Authorization?WSDL" output="genfiles" wrapArrays="true" serverside="false" skeletonDeploy="false" >
            <mapping namespace="http://security.bea.com/ssmws/ssm-soap-types-1.0.xsd" package="com.bea.security.ssmws.types"/>
            <mapping namespace="http://security.bea.com/ssmws/ssm-ws-1.0.wsdl" package="com.bea.security.ssmws.service"/>
        </axis-wsdl2java>
        <axis-wsdl2java url="${wssm.service.url}/XACMLAuthorization?WSDL" output="genfiles" serverside="false" skeletonDeploy="false" wrapArrays="true">
            <mapping namespace="http://security.bea.com/ssmws/ssm-soap-types-1.0.xsd" package="com.bea.security.ssmws.types"/>
            <mapping namespace="http://security.bea.com/ssmws/ssm-ws-1.0.wsdl" package="com.bea.security.ssmws.service"/>
            <mapping namespace="urn:oasis:names:tc:xacml:2.0:policy:schema:os" package="com.bea.security.ssmws.types.policy"/>
            <mapping namespace="urn:oasis:names:tc:xacml:2.0:context:schema:os" package="com.bea.security.ssmws.types.context"/>
        </axis-wsdl2java>
    </target>
        <target name="compilegen" depends="gen-wsdl-stubs" description="Compile sample files.">
        <mkdir dir="${build.classes}"/>
        <javac destdir="${build.classes}" debug="on">
            <classpath refid="build.classpath" />
            <src path="genfiles" />
        </javac>
    </target>
    <target name="genjar" depends="compilegen" description="jar wsdl stubs.">
        <mkdir dir="dist" />
        <jar destfile="dist/xacmlgen.jar" basedir="${build.classes}" >
            <include name="**/*.class" />
        </jar>
        <delete dir="${build.classes}"/>
    </target>
    <target name="compile" description="Compile sample files.">
        <mkdir dir="${build.classes}"/>
        <javac destdir="${build.classes}" debug="on">
            <classpath refid="build.classpath" />
            <classpath path="dist/xacmlgen.jar" />
            <src path="${src}"/>
        </javac>
    </target>

    <target name="jar" depends="compile" description="Compile and create executable jar of sample files.">

        <jar destfile="dist/${ant.project.name}.jar" basedir="${build.classes}" >
            <include name="**/*.class" />
        </jar>
        <delete dir="${build.classes}"/>
    </target>

    <target name="build" depends="clean,gen-wsdl-stubs,jar" description="Generate java files from wsdl, create jar and script to run sample from command-line.">
        <!-- Create run script based on OS. -->
        <condition property="script_name" value="runXACMLSample.bat" else="runXACMLSample.sh">
            <os family="windows"/>
        </condition>
        <copy file="templates/${script_name}.template" tofile="dist/${script_name}" />
        <replace file="dist/${script_name}" token="@external_jars@" value="${toString:build.classpath}">
            <replacefilter token="@project_name@" value="${ant.project.name}"/>
            <replacefilter token="@wssm.url@" value="${wssm.service.url}"/>
        </replace>
        <!-- For Unix-like systems: Set execute permissions -->
        <chmod file="dist/runXACMLSample.sh" perm="a+x"/>
    </target>

    <target name="clean" description="Clean sample space.">
        <delete dir="genfiles"/>
        <delete dir="${build.classes}"/>
        <delete dir="dist"/>
    </target>

    <target name="setup" description="Seed sample policies into store.">
<!--
        <condition property="wlst_script_name" value="wlst.cmd" else="wlst.sh">
            <os family="windows"/>
        </condition>
        <exec executable="${idm.home}/common/bin/${wlst_script_name}" failonerror="true">
            <arg value="./config/seed_policy.py"/>
        </exec>
-->
    </target>

    <target name="unsetup" description="Remove test policies from store.">
<!--
        <condition property="wlst_script_name" value="wlst.cmd" else="wlst.sh">
            <os family="windows"/>
        </condition>
        <exec executable="${idm.home}/common/bin/${wlst_script_name}" failonerror="true">
            <arg value="./config/delete_policy.py"/>
        </exec>
-->
    </target>

    <target name="run" description="Run sample.">
        <property name="myclasspath" refid="build.classpath"/>
        <!-- Emit the property to the ant console -->
        <echo message="Classpath = ${myclasspath}"/>
        <java classname="oracle.security.jps.xacml.sample.XacmlSample"  fork="true">
            <classpath refid="build.classpath"/>
            <classpath>
                <pathelement location="dist/${ant.project.name}.jar"/>
            </classpath>
            <classpath>
                <pathelement location="dist/xacmlgen.jar"/>
            </classpath>
            <sysproperty key="wssm.url" value="${wssm.service.url}"/>
        </java>
    </target>
    
    <target name="help"    description="print this help">
        <java classname="org.apache.tools.ant.Main">
            <arg value="-projecthelp"/>
            <classpath>
                <fileset dir="${ant.library.dir}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>
</project>

